syntax = "proto3";

package ocean.v1;

message BuildInfo {
  // Number of the version.
  string version = 1;
  // Hash of the commit.
  string commit = 2;
  // Date of the commit.
  string date = 3;
}

message AccountInfo {
  // Account name.
  string name = 1;
  // Account index.
  uint32 index = 2;
  // Derivation path.
  string derivation_path = 3;
  // XPub.
  string xpub = 4;
}

message BalanceInfo {
  // Balance of utxos with 1+ confirmations.
  uint64 confirmed_balance = 1;
  // Balance of utxos with no confirmations.
  uint64 unconfirmed_balance = 2;
  // Balance of locked utxos.
  uint64 locked_balance = 3;
  // Total balance.
  uint64 total_balance = 4;
}

message Input {
  // Previous output txid.
  string txid = 1;
  // Previous tx output index.
  uint32 index = 2;
}

message UnblindedInput {
  // Index of the pset input.
  uint32 index = 1;
  // Revealed prevout asset.
  string asset = 2;
  // Revealed prevout amount.
  uint64 amount = 3;
  // Prevout asset blinder.
  string asset_blinder = 4;
  // Prevout amount blinder.
  string amount_blinder = 5;
}

message Output {
  // Asset hash.
  string asset = 1;
  // Sent amount.
  uint64 amount = 2;
  // Address to send funds to.
  string address = 3;
  // ScriptPubkey to send funds to (alternative to address).
  string script = 4;
  // Blinding public key to make output confidential (alternative to address).
  string blinding_pubkey = 5;
}

message Utxos {
  // Account name.
  string account_name = 1;
  // List of utxos.
  repeated Utxo utxos = 2;
}

message UtxoStatus {
  string txid = 1;
  BlockDetails block_info = 2;
  string txhex = 3;
}

message Utxo {
  // Txid of the uxo.
  string txid = 1;
  // Output index.
  uint32 index = 2;
  // Asset.
  string asset = 3;
  // Value.
  uint64 value = 4;
  // Script.
  bytes script = 5;
  // Asset blinder for confidential utxo.
  bytes asset_blinder = 6;
  // Value blinder for confidential utxo.
  bytes value_blinder = 7;
  // Name of the account owning the utxo.
  string account_name = 8;
  // Info about utxo's spent status.
  UtxoStatus spent_status = 9;
  // Info about utxo's confirmation status.
  UtxoStatus confirmed_status = 10;
}

message BlockDetails {
  // Hash of the block.
  string hash = 1;
  // Heighth (index) of the block.
  uint64 height = 2;
  // Timestamp of the block.
  int64 timestamp = 3;
}

message Template {
  enum Format {
    FORMAT_UNSPECIFIED = 0;
    FORMAT_DESCRIPTOR = 1;
    FORMAT_MINISCRIPT = 2;
    FORMAT_IONIO = 3;
    FORMAT_RAW = 4;
  }
  Format format = 1;
  string value = 2;
}

enum TxEventType {
  TX_EVENT_TYPE_UNSPECIFIED = 0;
  // Tx broadcasted.
  TX_EVENT_TYPE_BROADCASTED = 1;
  // Tx unconfirmed.
  TX_EVENT_TYPE_UNCONFIRMED = 2;
  // Tx confirmed.
  TX_EVENT_TYPE_CONFIRMED = 3;
}

enum UtxoEventType {
  UTXO_EVENT_TYPE_UNSPECIFIED = 0;
  UTXO_EVENT_TYPE_NEW = 1;
  UTXO_EVENT_TYPE_CONFIRMED = 2;
  UTXO_EVENT_TYPE_LOCKED = 3;
  UTXO_EVENT_TYPE_UNLOCKED = 4;
  UTXO_EVENT_TYPE_SPENT = 5;
}

enum WebhookEventType {
  WEBHOOK_EVENT_TYPE_UNSPECIFIED = 0;
  // Receive notification about transactions.
  WEBHOOK_EVENT_TYPE_TRANSACTION = 1;
  // Receive notifications about utxos.
  WEBHOOK_EVENT_TYPE_UTXO = 2;
}
